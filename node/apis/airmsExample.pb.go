// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node/apis/airmsExample.proto

package apis

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type AirmsExampleRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AirmsExampleRequest) Reset()         { *m = AirmsExampleRequest{} }
func (m *AirmsExampleRequest) String() string { return proto.CompactTextString(m) }
func (*AirmsExampleRequest) ProtoMessage()    {}
func (*AirmsExampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_102fa332d9011cb7, []int{0}
}

func (m *AirmsExampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AirmsExampleRequest.Unmarshal(m, b)
}
func (m *AirmsExampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AirmsExampleRequest.Marshal(b, m, deterministic)
}
func (m *AirmsExampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AirmsExampleRequest.Merge(m, src)
}
func (m *AirmsExampleRequest) XXX_Size() int {
	return xxx_messageInfo_AirmsExampleRequest.Size(m)
}
func (m *AirmsExampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AirmsExampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AirmsExampleRequest proto.InternalMessageInfo

func (m *AirmsExampleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type AirmsExampleReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AirmsExampleReply) Reset()         { *m = AirmsExampleReply{} }
func (m *AirmsExampleReply) String() string { return proto.CompactTextString(m) }
func (*AirmsExampleReply) ProtoMessage()    {}
func (*AirmsExampleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_102fa332d9011cb7, []int{1}
}

func (m *AirmsExampleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AirmsExampleReply.Unmarshal(m, b)
}
func (m *AirmsExampleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AirmsExampleReply.Marshal(b, m, deterministic)
}
func (m *AirmsExampleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AirmsExampleReply.Merge(m, src)
}
func (m *AirmsExampleReply) XXX_Size() int {
	return xxx_messageInfo_AirmsExampleReply.Size(m)
}
func (m *AirmsExampleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AirmsExampleReply.DiscardUnknown(m)
}

var xxx_messageInfo_AirmsExampleReply proto.InternalMessageInfo

func (m *AirmsExampleReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AirmsExampleRequest)(nil), "apis.AirmsExampleRequest")
	proto.RegisterType((*AirmsExampleReply)(nil), "apis.AirmsExampleReply")
}

func init() { proto.RegisterFile("node/apis/airmsExample.proto", fileDescriptor_102fa332d9011cb7) }

var fileDescriptor_102fa332d9011cb7 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc9, 0xcb, 0x4f, 0x49,
	0xd5, 0x4f, 0x2c, 0xc8, 0x2c, 0xd6, 0x4f, 0xcc, 0x2c, 0xca, 0x2d, 0x76, 0xad, 0x48, 0xcc, 0x2d,
	0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0x49, 0x28, 0x69, 0x72, 0x09,
	0x3b, 0x22, 0xc9, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25,
	0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0xba, 0x5c, 0x82, 0xa8,
	0x4a, 0x0b, 0x72, 0x2a, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x61, 0x6a,
	0x61, 0x5c, 0xa3, 0x00, 0x2e, 0x1e, 0x64, 0xe5, 0x42, 0x0e, 0x5c, 0x1c, 0xc1, 0x89, 0x95, 0x1e,
	0xa9, 0x39, 0x39, 0xf9, 0x42, 0x92, 0x7a, 0x20, 0xcb, 0xf5, 0xb0, 0xd8, 0x2c, 0x25, 0x8e, 0x4d,
	0xaa, 0x20, 0xa7, 0x52, 0x89, 0xc1, 0x49, 0x39, 0x4a, 0x11, 0xe4, 0x8f, 0xc4, 0x3c, 0xbd, 0xe4,
	0xfc, 0x5c, 0x14, 0x2f, 0xe9, 0xc3, 0x7d, 0x9a, 0xc4, 0x06, 0xf6, 0x9d, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x6b, 0x73, 0xf5, 0x55, 0xfd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AirmsExampleClient is the client API for AirmsExample service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AirmsExampleClient interface {
	SayHello(ctx context.Context, in *AirmsExampleRequest, opts ...grpc.CallOption) (*AirmsExampleReply, error)
}

type airmsExampleClient struct {
	cc *grpc.ClientConn
}

func NewAirmsExampleClient(cc *grpc.ClientConn) AirmsExampleClient {
	return &airmsExampleClient{cc}
}

func (c *airmsExampleClient) SayHello(ctx context.Context, in *AirmsExampleRequest, opts ...grpc.CallOption) (*AirmsExampleReply, error) {
	out := new(AirmsExampleReply)
	err := c.cc.Invoke(ctx, "/apis.AirmsExample/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AirmsExampleServer is the server API for AirmsExample service.
type AirmsExampleServer interface {
	SayHello(context.Context, *AirmsExampleRequest) (*AirmsExampleReply, error)
}

// UnimplementedAirmsExampleServer can be embedded to have forward compatible implementations.
type UnimplementedAirmsExampleServer struct {
}

func (*UnimplementedAirmsExampleServer) SayHello(ctx context.Context, req *AirmsExampleRequest) (*AirmsExampleReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterAirmsExampleServer(s *grpc.Server, srv AirmsExampleServer) {
	s.RegisterService(&_AirmsExample_serviceDesc, srv)
}

func _AirmsExample_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AirmsExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AirmsExampleServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.AirmsExample/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AirmsExampleServer).SayHello(ctx, req.(*AirmsExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AirmsExample_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apis.AirmsExample",
	HandlerType: (*AirmsExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _AirmsExample_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node/apis/airmsExample.proto",
}
